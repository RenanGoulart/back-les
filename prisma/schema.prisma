// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PhoneType {
  FIXO
  CELULAR
}

enum Gender {
  MASCULINO
  FEMININO
  NAO_INFORMADO
}

enum UserStatus {
  ATIVO
  INATIVO
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  password  String
  cpf       String
  ddd       String
  phone     String
  phoneType PhoneType
  gender    Gender
  birthDate DateTime
  status    UserStatus
  addresses Address[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum CardBrand {
  VISA
  MASTERCARD
  AMERICAN_EXPRESS
  DISCOVER
  DINERS_CLUB
  JCB
  MAESTRO
  ELO
  HIPERCARD
  OUTRO
}

model CreditCard {
  id         String    @id @default(uuid())
  number     String
  cardHolder String
  cvv        String
  isMain     Boolean
  cardBrand  CardBrand
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Country {
  id        String   @id @default(uuid())
  name      String
  State     State[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model State {
  id        String   @id @default(uuid())
  name      String
  country   Country  @relation(fields: [countryId], references: [id])
  countryId String
  City      City[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model City {
  id        String    @id @default(uuid())
  name      String
  state     State     @relation(fields: [stateId], references: [id])
  stateId   String
  Address   Address[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum AddressType {
  COBRANCA
  ENTREGA
}

enum StreetType {
  RUA
  AVENIDA
  TRAVESSA
  ALAMEDA
  ESTRADA
  OUTRO
}

enum ResidenceType {
  CASA
  APARTAMENTO
  CHACARA
  CONDOMINIO
  OUTRO
}

model Address {
  id            String        @id @default(uuid())
  street        String
  number        String
  district      String
  zipCode       String
  observation   String
  city          City          @relation(fields: [cityId], references: [id])
  cityId        String
  addressType   AddressType
  streetType    StreetType
  residenceType ResidenceType
  isMain        Boolean
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  User          User?         @relation(fields: [userId], references: [id])
  userId        String?
}
